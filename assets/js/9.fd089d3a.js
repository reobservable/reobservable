(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{176:function(e,t,a){"use strict";a.r(t);var r=a(0),i=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[e._v("I'm a big fan of "),a("a",{attrs:{href:"https://github.com/dvajs/dva",target:"_blank",rel:"noopener noreferrer"}},[e._v("dvajs"),a("OutboundLink")],1),e._v(", it helps me get rid out of the boilerplate of redux. But I think redux-saga in dva sometimes can be a little bit verbose since I prefer functional reactive programming(frp) than imperative programming.")]),e._v(" "),e._m(1),e._v(" "),a("p",[e._v("If you:")]),e._v(" "),e._m(2),e._v(" "),a("p",[e._v("try reobservable!")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"motivation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#motivation","aria-hidden":"true"}},[this._v("#")]),this._v(" Motivation")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("I know that reinvent the weel could be a terrible practice, but in dva community, there is no plan to support frp. At last, I decided to create "),t("strong",[this._v("reobservable")]),this._v(", which, in a world, is a state manager mixined dva architecture and frp featuresï¼ˆRxJS + redux-observable. In reobservable, dva architecture wiped out the boilerplate code of redux, RxJS played an elite role in managing asynchronous task.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("love redux concept, love the predicatable, centralized, debuggable features")]),this._v(" "),t("li",[this._v("stuking with the boilerplate code of redux")]),this._v(" "),t("li",[this._v("want to use RxJS to managing asynchronous task")])])}],!1,null,null,null);i.options.__file="README.md";t.default=i.exports}}]);